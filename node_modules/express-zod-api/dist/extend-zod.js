"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dateOut = exports.dateIn = exports.date = exports.upload = exports.file = void 0;
const zod_1 = require("zod");
const zod_to_ts_1 = require("zod-to-ts");
const date_in_schema_1 = require("./date-in-schema");
const date_out_schema_1 = require("./date-out-schema");
const file_schema_1 = require("./file-schema");
const upload_schema_1 = require("./upload-schema");
__exportStar(require("zod"), exports);
exports.file = file_schema_1.ZodFile.create;
exports.upload = upload_schema_1.ZodUpload.create;
/**
 * @description z.date() represents the Date, it should not be used within IO schemas
 * @deprecated Please use z.dateIn() or z.dateOut() within IO schemas
 * */
exports.date = zod_1.ZodDate.create;
const dateIn = (...params) => (0, zod_to_ts_1.withGetType)(date_in_schema_1.ZodDateIn.create(...params), (ts) => ts.factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword));
exports.dateIn = dateIn;
const dateOut = (...params) => (0, zod_to_ts_1.withGetType)(date_out_schema_1.ZodDateOut.create(...params), (ts) => ts.factory.createKeywordTypeNode(ts.SyntaxKind.StringKeyword));
exports.dateOut = dateOut;
//# sourceMappingURL=extend-zod.js.map