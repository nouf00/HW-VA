/// <reference types="qs" />
/// <reference types="jest" />
import { Request, Response } from "express";
import { Logger } from "winston";
import { CommonConfig } from "./config-type";
import { AbstractEndpoint } from "./endpoint";
interface TestEndpointProps<REQ, RES, LOG> {
    endpoint: AbstractEndpoint;
    requestProps?: REQ;
    responseProps?: RES;
    configProps?: Partial<CommonConfig>;
    loggerProps?: LOG;
    /** @deprecated for testing purposes only */
    __noJest?: boolean;
}
/**
 * @description You need to install Jest and probably @types/jest to use this method
 */
export declare const testEndpoint: <REQ extends Partial<Record<keyof Request<import("express-serve-static-core").ParamsDictionary, any, any, import("qs").ParsedQs, Record<string, any>>, any>> | undefined = undefined, RES extends Partial<Record<keyof Response<any, Record<string, any>>, any>> | undefined = undefined, LOG extends Partial<Record<keyof Logger, any>> | undefined = undefined>({ endpoint, requestProps, responseProps, configProps, loggerProps, __noJest, }: TestEndpointProps<REQ, RES, LOG>) => Promise<{
    requestMock: {
        method: string;
    } & Record<"header", jest.Mock<any, any>> & (REQ extends undefined ? {} : REQ);
    responseMock: {
        writableEnded: boolean;
        statusCode: number;
        statusMessage: string;
    } & Record<"json" | "status" | "set" | "end", jest.Mock<any, any>> & (RES extends undefined ? {} : RES);
    loggerMock: Record<"error" | "warn" | "debug" | "info", jest.Mock<any, any>> & (LOG extends undefined ? {} : LOG);
}>;
export {};
