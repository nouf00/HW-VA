import { Express } from "express";
import { Logger } from "winston";
import { CommonConfig } from "./config-type";
import { DependsOnMethod } from "./depends-on-method";
import { AbstractEndpoint } from "./endpoint";
import { AuxMethod, Method } from "./method";
import { ServeStatic, StaticHandler } from "./serve-static";
export interface Routing {
    [SEGMENT: string]: Routing | DependsOnMethod | AbstractEndpoint | ServeStatic;
}
export interface RoutingCycleParams {
    routing: Routing;
    endpointCb: (endpoint: AbstractEndpoint, path: string, method: Method | AuxMethod) => void;
    staticCb?: (path: string, handler: StaticHandler) => void;
    parentPath?: string;
    hasCors?: boolean;
}
export declare const routingCycle: ({ routing, endpointCb, staticCb, parentPath, hasCors, }: RoutingCycleParams) => void;
export declare const initRouting: ({ app, logger, config, routing, }: {
    app: Express;
    logger: Logger;
    config: CommonConfig;
    routing: Routing;
}) => void;
