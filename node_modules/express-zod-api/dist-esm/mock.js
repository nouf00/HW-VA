import http from "http";
import { mimeJson } from "./mime.js";
/**
 * @description You need to install Jest and probably @types/jest to use this method
 */
export const testEndpoint = async ({ endpoint, requestProps, responseProps, configProps, loggerProps, __noJest, }) => {
    if (!jest || __noJest) {
        throw new Error("You need to install Jest in order to use testEndpoint().");
    }
    const requestMock = {
        method: "GET",
        header: jest.fn(() => mimeJson),
        ...requestProps,
    };
    const responseMock = {
        writableEnded: false,
        statusCode: 200,
        statusMessage: http.STATUS_CODES[200],
        set: jest.fn(() => responseMock),
        status: jest.fn((code) => {
            responseMock.statusCode = code;
            responseMock.statusMessage = http.STATUS_CODES[code];
            return responseMock;
        }),
        json: jest.fn(() => responseMock),
        end: jest.fn(() => {
            responseMock.writableEnded = true;
            return responseMock;
        }),
        ...responseProps,
    };
    const loggerMock = {
        info: jest.fn(),
        warn: jest.fn(),
        error: jest.fn(),
        debug: jest.fn(),
        ...loggerProps,
    };
    const configMock = {
        cors: false,
        logger: loggerMock,
        ...configProps,
    };
    await endpoint.execute({
        request: requestMock,
        response: responseMock,
        config: configMock,
        logger: loggerMock,
    });
    return { requestMock, responseMock, loggerMock };
};
//# sourceMappingURL=mock.js.map